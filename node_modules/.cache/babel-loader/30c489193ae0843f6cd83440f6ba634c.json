{"ast":null,"code":"var _jsxFileName = \"/Users/divya/Code/final_project/readme-generator/src/components/HeadingInput/HeadingInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './HeadingInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeadingInput = props => {\n  _s();\n\n  const [heading, setHeading] = useState(\"\");\n  const [markHeading, setMarkHeading] = useState(\"\");\n\n  const handleHeading = event => {\n    setHeading(event.target.value);\n    setMarkHeading(\"# \" + event.target.value + \"\\n---\");\n  };\n\n  const displayHeading = heading.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"headingRender\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-group-text\",\n          children: props.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: heading,\n          \"aria-label\": \"With textarea\",\n          onChange: handleHeading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outputs\",\n      children: displayHeading && /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: markHeading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HeadingInput, \"zgZhOH2mEbFdg2CXqeCQGI8PvTU=\");\n\n_c = HeadingInput;\nexport default HeadingInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeadingInput\");","map":{"version":3,"sources":["/Users/divya/Code/final_project/readme-generator/src/components/HeadingInput/HeadingInput.js"],"names":["React","useState","ReactMarkdown","HeadingInput","props","heading","setHeading","markHeading","setMarkHeading","handleHeading","event","target","value","displayHeading","length","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAO,oBAAP;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMQ,aAAa,GAAIC,KAAD,IAAW;AAC7BJ,IAAAA,UAAU,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACAJ,IAAAA,cAAc,CAAC,OAAME,KAAK,CAACC,MAAN,CAAaC,KAAnB,GAA2B,OAA5B,CAAd;AACH,GAHD;;AAKA,QAAMC,cAAc,GAAGR,OAAO,CAACS,MAAR,GAAiB,CAAxC;AAEA,sBACI;AAAK,IAAA,EAAE,EAAC,eAAR;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA,oBAAoCV,KAAK,CAACW;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAU,UAAA,SAAS,EAAC,cAApB;AAAmC,UAAA,KAAK,EAAEV,OAA1C;AAAmD,wBAAW,eAA9D;AAA8E,UAAA,QAAQ,EAAEI;AAAxF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACKI,cAAc,iBAAI,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAEN;AAAzB;AAAA;AAAA;AAAA;AAAA;AADvB;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAxBD;;GAAMJ,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import React, {useState} from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport './HeadingInput.css'\n\nconst HeadingInput = (props) => {\n    const [heading, setHeading] = useState(\"\");\n    const [markHeading, setMarkHeading] = useState(\"\");\n\n    const handleHeading = (event) => {\n        setHeading(event.target.value)\n        setMarkHeading(\"# \"+ event.target.value + \"\\n---\")\n    }\n\n    const displayHeading = heading.length > 0\n\n    return (\n        <div id=\"headingRender\">\n            <div className=\"inputs\">\n                <div className=\"input-group\">\n                    <span className=\"input-group-text\">{props.input}</span>\n                    <textarea className=\"form-control\" value={heading} aria-label=\"With textarea\" onChange={handleHeading}></textarea>\n                </div>\n            </div>\n            <div className=\"outputs\">\n                {displayHeading && <ReactMarkdown children={markHeading}/>}\n            </div>\n        </div>\n    )\n}\n\nexport default HeadingInput"]},"metadata":{},"sourceType":"module"}