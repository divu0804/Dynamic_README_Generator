{"ast":null,"code":"var _jsxFileName = \"/Users/divya/Code/final_project/readme-generator/src/components/TechnologiesUsed/TechnologiesUsed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Checkbox from '../Checkbox/Checkbox';\nimport TextInput from '../TextInput/TextInput';\nimport './TechnologiesUsed.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst listOfTech = [{\n  \"id\": 0,\n  \"svgURL\": \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/html5/html5-original-wordmark.svg\",\n  \"technology\": \"HTML\"\n}, {\n  \"id\": 1,\n  \"svgURL\": \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/css3/css3-original-wordmark.svg\",\n  \"technology\": \"CSS\"\n}, {\n  \"id\": 2,\n  \"svgURL\": \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg\",\n  \"technology\": \"JavaScript\"\n}, {\n  \"id\": 3,\n  \"svgURL\": \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg\",\n  \"technology\": \"React\"\n}, {\n  \"id\": 4,\n  \"svgURL\": \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/angularjs/angularjs-original.svg\",\n  \"technology\": \"Angular\"\n}, {\n  \"id\": 5,\n  \"svgURL\": \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/django/django-plain.svg\",\n  \"technology\": \"Django\"\n}, {\n  \"id\": 6,\n  \"svgURL\": \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/flask/flask-original.svg\",\n  \"technology\": \"Flask\"\n}, {\n  \"id\": 7,\n  \"svgURL\": \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg\",\n  \"technology\": \"NodeJS\"\n}];\n\nconst TechnologiesUsed = () => {\n  _s();\n\n  const [otherCount, setOtherCount] = useState(0);\n  const [values, setValues] = useState(Array(otherCount).fill(\"\"));\n  const [checks, setChecks] = useState(Array(listOfTech.length).fill(false));\n\n  const handleTechClick = event => {\n    let updatedChecks = [];\n\n    if (event.target.checked) {\n      for (let i = 0; i < checks.length; i++) {\n        if (i != event.target.name) {\n          updatedChecks.push(checks[i]);\n        } else {\n          updatedChecks.push(true);\n        }\n      }\n\n      setChecks(updatedChecks);\n    } else {\n      for (let i = 0; i < checks.length; i++) {\n        if (i != event.target.name) {\n          updatedChecks.push(checks[i]);\n        } else {\n          updatedChecks.push(false);\n        }\n      }\n\n      setChecks(updatedChecks);\n    }\n  };\n\n  const techToDisplay = listOfTech.filter(tech => {\n    return checks[tech.id];\n  });\n  const displayTechList = techToDisplay.length > 0;\n  const heading = \"## Technologies Used\\n---\";\n\n  const addOthers = () => {\n    let newValues = [];\n\n    for (let i = 0; i < otherCount; i++) {\n      newValues.push(values[i]);\n    }\n\n    newValues.push(\"\");\n    setValues(newValues);\n    setOtherCount(otherCount + 1);\n  };\n\n  const deleteOthers = () => {\n    if (otherCount > 0) {\n      let newValues = [];\n\n      for (let i = 0; i < otherCount - 1; i++) {\n        newValues.push(values[i]);\n      }\n\n      setValues(newValues);\n      setOtherCount(otherCount - 1);\n    }\n  };\n\n  const displayOthers = otherCount > 0;\n  let temp_count = -1;\n\n  const handleChange = event => {\n    let updatedValues = [];\n\n    for (let i = 0; i < values.length; i++) {\n      if (i != event.target.name) {\n        updatedValues.push(values[i]);\n      } else {\n        updatedValues.push(event.target.value);\n      }\n    }\n\n    setValues(updatedValues);\n  };\n\n  const valuesToDisplay = values.filter(val => {\n    return val.length > 0;\n  });\n  const displayValueList = valuesToDisplay.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"techUsed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs technologyList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"subheading\",\n        children: \"Technologies Used\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), listOfTech.map(tech => {\n        return /*#__PURE__*/_jsxDEV(Checkbox, {\n          id: tech.id,\n          svgURL: tech.svgURL,\n          technology: tech.technology,\n          clickHandler: handleTechClick,\n          check: checks[tech.id]\n        }, tech.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 32\n        }, this);\n      }), displayOthers && values.map(val => {\n        temp_count = temp_count + 1;\n        return /*#__PURE__*/_jsxDEV(TextInput, {\n          id: temp_count,\n          value: val,\n          placeholder: \"Other Technology\",\n          changeHandler: handleChange,\n          width: \"40%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 32\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-light addbutton\",\n        onClick: addOthers,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          fill: \"currentColor\",\n          className: \"bi bi-plus\",\n          viewBox: \"0 0 16 16\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 95\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-dark deletebutton\",\n        onClick: deleteOthers,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          fill: \"currentColor\",\n          className: \"bi bi-dash\",\n          viewBox: \"0 0 16 16\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 100\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outputs\",\n      children: [(displayTechList || displayValueList) && /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 59\n      }, this), displayTechList && techToDisplay.map(tech => {\n        const listElement = \"* \" + tech.technology + \"\\n\";\n        return /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: listElement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 32\n        }, this);\n      }), displayValueList && valuesToDisplay.map(val => {\n        const listElement = \"* \" + val + \"\\n\";\n        return /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: listElement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 32\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TechnologiesUsed, \"WB84FzTgMxuR+aAN/OVWccRZcTw=\");\n\n_c = TechnologiesUsed;\nexport default TechnologiesUsed;\n\nvar _c;\n\n$RefreshReg$(_c, \"TechnologiesUsed\");","map":{"version":3,"sources":["/Users/divya/Code/final_project/readme-generator/src/components/TechnologiesUsed/TechnologiesUsed.js"],"names":["React","useState","ReactMarkdown","Checkbox","TextInput","listOfTech","TechnologiesUsed","otherCount","setOtherCount","values","setValues","Array","fill","checks","setChecks","length","handleTechClick","event","updatedChecks","target","checked","i","name","push","techToDisplay","filter","tech","id","displayTechList","heading","addOthers","newValues","deleteOthers","displayOthers","temp_count","handleChange","updatedValues","value","valuesToDisplay","val","displayValueList","map","svgURL","technology","listElement"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport Checkbox from '../Checkbox/Checkbox'\nimport TextInput from '../TextInput/TextInput'\nimport './TechnologiesUsed.css'\n\nconst listOfTech = [\n    {\n        \"id\": 0,\n        \"svgURL\": \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/html5/html5-original-wordmark.svg\",\n        \"technology\": \"HTML\"\n    },\n    {\n        \"id\": 1,\n        \"svgURL\": \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/css3/css3-original-wordmark.svg\",\n        \"technology\": \"CSS\"\n    },\n    {\n        \"id\": 2,\n        \"svgURL\": \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg\",\n        \"technology\": \"JavaScript\"\n    },\n    {\n        \"id\": 3,\n        \"svgURL\": \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg\",\n        \"technology\": \"React\"\n    },\n    {\n        \"id\": 4,\n        \"svgURL\": \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/angularjs/angularjs-original.svg\",\n        \"technology\": \"Angular\"\n    },\n    {\n        \"id\": 5,\n        \"svgURL\": \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/django/django-plain.svg\",\n        \"technology\": \"Django\"\n    },\n    {\n        \"id\": 6,\n        \"svgURL\": \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/flask/flask-original.svg\",\n        \"technology\": \"Flask\"\n    },\n    {\n        \"id\": 7,\n        \"svgURL\": \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg\",\n        \"technology\": \"NodeJS\"\n    }\n]\n\nconst TechnologiesUsed = () => {\n\n    const [otherCount, setOtherCount] = useState(0)\n    const [values, setValues] = useState(Array(otherCount).fill(\"\"))\n\n    const [checks, setChecks] = useState(Array(listOfTech.length).fill(false))\n\n    const handleTechClick = (event) => {\n        let updatedChecks = []\n        if (event.target.checked) {\n            for (let i = 0; i < checks.length; i++) {\n                if (i != event.target.name) {\n                    updatedChecks.push(checks[i])\n                }\n                else {\n                    updatedChecks.push(true)\n                }\n            }\n            setChecks(updatedChecks)\n        }\n        else {\n            for (let i = 0; i < checks.length; i++) {\n                if (i != event.target.name) {\n                    updatedChecks.push(checks[i])\n                }\n                else {\n                    updatedChecks.push(false)\n                }\n            }\n            setChecks(updatedChecks)\n        }\n    }\n\n    const techToDisplay = listOfTech.filter((tech) => {\n        return checks[tech.id]\n    })\n\n    const displayTechList = techToDisplay.length > 0\n    const heading = \"## Technologies Used\\n---\"\n\n    const addOthers = () => {\n        let newValues = []\n        for (let i = 0; i < otherCount; i++) {\n            newValues.push(values[i])\n        }\n        newValues.push(\"\")\n        setValues(newValues)\n        setOtherCount(otherCount + 1)\n    }\n\n    const deleteOthers = () => {\n        if (otherCount > 0) {\n            let newValues = []\n            for (let i = 0; i < otherCount - 1; i++) {\n                newValues.push(values[i])\n            }\n            setValues(newValues)\n            setOtherCount(otherCount - 1)\n        }\n\n    }\n\n    const displayOthers = otherCount > 0\n    let temp_count = -1\n\n    const handleChange = (event) => {\n        let updatedValues = []\n        for (let i = 0; i < values.length; i++) {\n            if (i != event.target.name) {\n                updatedValues.push(values[i])\n            }\n            else {\n                updatedValues.push(event.target.value)\n            }\n        }\n        setValues(updatedValues)\n    }\n\n    const valuesToDisplay = values.filter((val) => {\n        return val.length > 0\n    })\n\n    const displayValueList = valuesToDisplay.length > 0\n\n    return (\n        <div id=\"techUsed\">\n            <div className='inputs technologyList'>\n                <h4 className=\"subheading\">Technologies Used</h4>\n                {\n                    listOfTech.map((tech) => {\n                        return <Checkbox key={tech.id} id={tech.id} svgURL={tech.svgURL} technology={tech.technology} clickHandler={handleTechClick} check={checks[tech.id]} />\n                    })\n                }\n                {\n                    displayOthers &&\n                    values.map((val) => {\n                        temp_count = temp_count + 1\n                        return <TextInput id={temp_count} value={val} placeholder={\"Other Technology\"} changeHandler={handleChange} width={\"40%\"}/>\n                    })\n                }\n                <button type=\"button\" className=\"btn btn-light addbutton\" onClick={addOthers}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus\" viewBox=\"0 0 16 16\">\n                    <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\n                </svg></button>\n                <button type=\"button\" className=\"btn btn-dark deletebutton\" onClick={deleteOthers}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-dash\" viewBox=\"0 0 16 16\">\n                    <path d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\" />\n                </svg></button>\n            </div>\n            <div className=\"outputs\">\n                {(displayTechList || displayValueList) && <ReactMarkdown children={heading} />}\n                {\n                    displayTechList && techToDisplay.map((tech) => {\n                        const listElement = \"* \" + tech.technology + \"\\n\"\n                        return <ReactMarkdown children={listElement} />\n                    })\n                }\n                {\n                    displayValueList && valuesToDisplay.map((val) => {\n                        const listElement = \"* \" + val + \"\\n\"\n                        return <ReactMarkdown children={listElement} />\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default TechnologiesUsed\n"]},"metadata":{},"sourceType":"module"}