{"ast":null,"code":"var _jsxFileName = \"/Users/divya/Code/final_project/Dynamic_README_Generator/src/components/Screenshots/Screenshots.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Image from '../Image/Image';\nimport './Screenshots.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction isImage(url) {\n  return /\\.(jpg|jpeg|png|webp|avif|gif|svg)$/.test(url);\n}\n\nconst Screenshots = () => {\n  _s();\n\n  const [imageCount, setImageCount] = useState(1);\n  const [images, setImages] = useState(Array(imageCount).fill(\"\"));\n\n  const addSS = () => {\n    if (imageCount < 4) {\n      let newImages = [];\n\n      for (let i = 0; i < imageCount; i++) {\n        newImages.push(images[i]);\n      }\n\n      newImages.push(\"\");\n      setImages(newImages);\n      setImageCount(imageCount + 1);\n    }\n  };\n\n  const delSS = () => {\n    if (imageCount > 0) {\n      let newImages = [];\n\n      for (let i = 0; i < imageCount - 1; i++) {\n        newImages.push(images[i]);\n      }\n\n      setImages(newImages);\n      setImageCount(imageCount - 1);\n    }\n  };\n\n  const displayImageFields = images.length > 0;\n  let temp_count = -1;\n\n  const handleUpload = event => {\n    let newImages = [];\n\n    for (let i = 0; i < imageCount; i++) {\n      if (i != event.target.name) {\n        newImages.push(images[i]);\n      } else {\n        newImages.push(event.target.value);\n      }\n    }\n\n    setImages(newImages);\n  };\n\n  const imagesToDisplay = images.filter(img => {\n    return isImage(img);\n  });\n  const displayImages = imagesToDisplay.length > 0;\n  const heading = \"## Screenshots\\n---\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"screenshots\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"subheading\",\n        children: \"Screenshots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), displayImageFields && images.map(img => {\n        temp_count++;\n        let temp_text = \"Screenshot \" + temp_count;\n        return /*#__PURE__*/_jsxDEV(Image, {\n          id: temp_count,\n          altText: temp_text,\n          mouseOverText: temp_text,\n          width: \"95%\",\n          handleUpload: handleUpload,\n          pholder: \"Enter Image URL\"\n        }, \"screenshots\" + temp_count, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 32\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-light addbutton\",\n        onClick: addSS,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          fill: \"currentColor\",\n          className: \"bi bi-plus\",\n          viewBox: \"0 0 16 16\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 91\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-dark deletebutton\",\n        onClick: delSS,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          fill: \"currentColor\",\n          className: \"bi bi-dash\",\n          viewBox: \"0 0 16 16\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 93\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outputs\",\n      children: [displayImages && /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 38\n      }, this), displayImages && imagesToDisplay.map(imgPath => {\n        const temp_image = '![](' + imgPath + ' \"\")';\n        return /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: temp_image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 32\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Screenshots, \"koYypym+rNsMKhta+BbTnyR5iiw=\");\n\n_c = Screenshots;\nexport default Screenshots;\n\nvar _c;\n\n$RefreshReg$(_c, \"Screenshots\");","map":{"version":3,"sources":["/Users/divya/Code/final_project/Dynamic_README_Generator/src/components/Screenshots/Screenshots.js"],"names":["React","useState","ReactMarkdown","Image","isImage","url","test","Screenshots","imageCount","setImageCount","images","setImages","Array","fill","addSS","newImages","i","push","delSS","displayImageFields","length","temp_count","handleUpload","event","target","name","value","imagesToDisplay","filter","img","displayImages","heading","map","temp_text","imgPath","temp_image"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport Image from '../Image/Image'\nimport './Screenshots.css'\n\nfunction isImage(url) {\n    return /\\.(jpg|jpeg|png|webp|avif|gif|svg)$/.test(url);\n  }\n\nconst Screenshots = () => {\n\n    const [imageCount, setImageCount] = useState(1)\n    const [images, setImages] = useState(Array(imageCount).fill(\"\"))\n\n    const addSS = () => {\n        if (imageCount < 4) {\n            let newImages = []\n            for (let i = 0; i < imageCount; i++) {\n                newImages.push(images[i])\n            }\n            newImages.push(\"\")\n            setImages(newImages)\n            setImageCount(imageCount + 1)\n        }\n    }\n\n    const delSS = () => {\n        if (imageCount > 0) {\n            let newImages = []\n            for (let i = 0; i < imageCount - 1; i++) {\n                newImages.push(images[i])\n            }\n            setImages(newImages)\n            setImageCount(imageCount - 1)\n        }\n    }\n\n    const displayImageFields = images.length > 0\n    let temp_count = -1\n\n    const handleUpload = (event) => {\n        let newImages = []\n        for (let i = 0; i < imageCount; i++) {\n            if (i != event.target.name) {\n                newImages.push(images[i])\n            }\n            else {\n                newImages.push(event.target.value)\n            }\n        }\n        setImages(newImages)\n    }\n\n    const imagesToDisplay = images.filter((img) => {\n        return isImage(img)\n    })\n\n    const displayImages = imagesToDisplay.length > 0\n    const heading = \"## Screenshots\\n---\"\n\n    return (\n        <div id=\"screenshots\">\n            <div className=\"inputs\">\n                <h4 className=\"subheading\">Screenshots</h4>\n                {\n                    displayImageFields &&\n                    images.map((img) => {\n                        temp_count++\n                        let temp_text = \"Screenshot \" + temp_count\n                        return <Image key={\"screenshots\"+temp_count} id={temp_count} altText={temp_text} mouseOverText={temp_text} width=\"95%\" handleUpload={handleUpload} pholder={\"Enter Image URL\"}/>\n                    })\n                }\n                <button type=\"button\" className=\"btn btn-light addbutton\" onClick={addSS}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus\" viewBox=\"0 0 16 16\">\n                    <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\n                </svg></button>\n                <button type=\"button\" className=\"btn btn-dark deletebutton\" onClick={delSS}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-dash\" viewBox=\"0 0 16 16\">\n                    <path d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\" />\n                </svg></button>\n            </div>\n            <div className=\"outputs\">\n                {\n                    displayImages && <ReactMarkdown children={heading} />\n                }\n                {\n                    displayImages &&\n                    imagesToDisplay.map((imgPath) => {\n                        const temp_image = '![](' + imgPath + ' \"\")'\n                        return <ReactMarkdown children={temp_image} />\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Screenshots"]},"metadata":{},"sourceType":"module"}